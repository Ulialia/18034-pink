@mixin clearfix() {
  &::after {
    content: "";
    display: table;
    clear: both;
  }
}

@mixin ul-clear() {
  margin: 0;
  padding: 0;
  list-style: none;
}

@mixin border($width: 1px, $type: solid, $color: #000) {
  border: $width $type $color;
}

@mixin border-table() {
  @include border(2px, solid, #e5e5e5);
}

@mixin placeholder-color($color: red) {
  &::-webkit-input-placeholder {
    color: $color;
  }
  &::-moz-placeholder {
    color: $color;
  }
  &:-ms-input-placeholder {
    color: $color;
  }
}

@mixin zero-centered() {
  position: absolute;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
  margin: auto;
}

@mixin respond($media) {

  // for generic mobile viewports (width  to 320px)
  @if $media == mobile-small {
    @media only screen and (max-width: $bp-xsmall) { @content; }
  }

  // for generic mobile viewports (width  to 659px)
  @if $media == mobile {
    @media only screen and (max-width: $bp-small - 1) { @content; }
  }

  // for generic mobile viewports (width  to 659px) and retina
  @if $media == mobile-retina {
    @media only screen and (max-width: $bp-small - 1) and (min-resolution: 144dpi),
    (max-width: $bp-small - 1) and (min-resolution: 1.5dppx) { @content; }
  }

  // for generic tablet viewports (width from 660px and bigger)
  @else if $media == tablet {
    @media only screen and (min-width: $bp-small) { @content; }
  }

  // for generic tablet viewports (width from 700px to 959px)
  @else if $media == tablet-large {
    @media only screen and (min-width: $bp-small-middle-width) and (max-width: $bp-medium - 1) { @content; }
  }

  // for generic tablet viewports (width from 660px to 959px)
  @else if $media == tablet-only {
    @media only screen and (min-width: $bp-small) and (max-width: $bp-medium - 1) { @content; }
  }

  // for generic tablet viewports (width from 660px to 959px)
  @else if $media == tablet-only-retina {
    @media only screen and (min-width: $bp-small) and (max-width: $bp-medium - 1) and (min-resolution: 144dpi),
    (min-width: $bp-small) and (max-width: $bp-medium - 1) and (min-resolution: 1.5dppx) { @content; }
  }

  // width for small-desktop viewports (from 960px to 1144px, intermediate values)
  @else if $media == desktop-small {
    @media only screen and (min-width: $bp-medium + 1) and (max-width: $bp-large) { @content; }
  }

  // for ALL desktop viewports (from 960px and bigger)
  @else if $media == desktop {
    @media only screen and (min-width: $bp-medium) { @content; }
  }

  // for ALL desktop viewports (from 960px and bigger)
  @else if $media == desktop-retina {
    @media only screen and (min-width: $bp-medium) and (min-resolution: 144dpi),
    (min-width: $bp-medium) and (min-resolution: 1.5dppx) { @content; }
  }

    // for desktop viewports (from 1201px and bigger)
  @else if $media == desktop-all {
    @media only screen and (min-width: $bp-xlarge + 1) { @content; }
  }

}

@mixin container() {
  position: relative;
  margin: 0 auto;
  padding-right: $indent-help;
  padding-left: $indent-help;;
  @include clearfix;

  @include respond(tablet-large) {
    padding: 0 2*$indent-help;
  }

  @include respond(desktop) {
    max-width: 940px;
    padding: 0;
  }
}
